<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Document</title>
    <style>
        #test {
            width: 200px;
            height: 200px;
            background: #f00;
            display: none;
        }
    </style>
</head>
<body>
    <script>
        var calculator = function(decimalDigits, tax)
        {
           this.decimalDigits = decimalDigits;
           this.tax = tax;  
        };
        
        calculator.prototype = function(){
            add = function(x, y) {
                return x + y;
            },
            substract = function(x, y) {
                return x - y;
            }
            
            return {
                add : add,
                substract : substract
            }
        }();
        // alert(new calculator().add(11,3));
        
        var BaseCalculator = function(){
            this.decimalDigits = 2;
       
        };
        
      
        BaseCalculator.prototype = {
            add : function(x, y){
                return x + y;
            },
            
            substract : function(x, y)
            {
                return x - y;
            },
            
            decimalDigits : 10
        };
        
    //      var base = new BaseCalculator();
    //    console.log(base.hasOwnProperty('add'));
        
        var Calculator = function()
        {
            this.tax = 5;
            this.decimalDigits = null;
        };
        
        Calculator.prototype = new BaseCalculator();
        // Calculator.prototype = BaseCalculator.prototype;
     
       Calculator.prototype.divide = function(x, y) {
           return x / y;
       };
        var calc = new Calculator();
        // alert(calc.add(3,5));
        
        function Foo() {
            this.value = 43;
        }
        
        Foo.prototype = {
            method : function(){}
        };
        
        function Bar() {}
        
        Bar.prototype = new Foo();
        Bar.prototype.foo = 'hello world';
        Bar.prototype.constructor = Bar;
        Bar.prototype.console = function(){
            console.log(this.value);
        };
        
        var test = new Bar();
        var test2 = new Bar();
       
       
    //    Object.prototype.bar = 1;
    //    var foo = {goo : undefined};
       
    //    console.log(foo.bar);
       
       var foo = {
           hasOwnProperty : function(){
               return false;
           },
           
           bar : "Here be dragons"
       };
       
    //    console.log({}.hasOwnProperty.call(foo, 'bar'));
    
    // (function test()
    // {
    //     var a = b = 0;
    //     console.log("a : " + a + " b: " + b);
    // }());
   
//    x = 10;
//    delete x;
//    console.log(x);
    // test12();
    // function test12()
    // {
    //     alert('test');
    // }
    // window.onload = function(){
    //     var aDiv = document.getElementsByTagName("div");
    //     var before, now;
    //     before =  new Date().getTime();
    //     for(var i = 0, max = aDiv.length;i < max;i++)
    //     {
    //         aDiv[i].appendChild(document.createElement("span"));
    //         if(i === 50) console.log(new Date().getTime() - before);
            
    //     }   
        
    // };
    
    var man = {
        hands : 2,
        legs : 2,
        heads : 1
    };
    
    // if(typeof Object.prototype.clone === "undefined")
    // {
    //     Object.prototype.clone = function(){};
    // }
    
    // for(var i in man)
    // {
    //     // if(man.hasOwnProperty(i)) {
    //     if(Object.prototype.hasOwnProperty.call(man, i)) {
    //         console.log(i, " : ", man[i]);
    //     }
    // }
    
    // function heheda() {
    //     var h = 100;
    //     Function("console.log(typeof h);")();
    // }
    // heheda();
    
    (function(){
        var local = 1;
        eval("local = 3;console.log(local);");
        console.log(local);
    }());
        window.onload = function(){
            var oTest = document.getElementById("test");
            
            console.log(oTest.offsetWidth);
          
            console.log(oTest.offsetWidth);
        };
    </script>
    <div id="test"></div>
</body>
</html>